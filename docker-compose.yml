version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dukcapil-postgres
    environment:
      POSTGRES_DB: dukcapil_ktp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_dukcapil_database.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - dukcapil-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dukcapil_ktp"]
      interval: 10s
      timeout: 5s
      retries: 5

  dukcapil-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: dukcapil-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dukcapil_ktp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      LOGGING_LEVEL_ROOT: INFO
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dukcapil-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/dukcapil/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Optional: pgAdmin untuk database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dukcapil-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dukcapil.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dukcapil-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  dukcapil-network:
    driver: bridge

